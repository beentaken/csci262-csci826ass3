/*-------------------------------------------------------------
Student's Name: Boyang YAN
Student's email address: by932@uowmail.edu.au
Last Modification: 15/10/2016
-------------------------------------------------------------*/
#ifndef VEHICLETYPE_H
#define VEHICLETYPE_H
#include<iostream>
#include <string>
using namespace std;
class vehicleType
{
    friend ostream& operator<<(ostream&, vehicleType);
    friend istream& operator>>(istream&, vehicleType&);
	private:
		bool parkable;
		string regisrationFormat;
		unsigned int weightVolume;
		unsigned int weightSpeed;
		
		float turnProbability;
		float parkProbability;
		float speedUpProbability;
		float speedDownProbability;
		float continuingDrivingProbability;
		
		float stilParkProbability;
		float resumingJourneyProbability;
	public:	
		vehicleType();	// Constructor
		~vehicleType();	// destructor
		
		bool getParkable() const;
		string getRegisration() const;
		int getWeightVolume() const;
		int getWeightSpeed() const;
		
		float getTurnProbability() const;
		float getParkProbability() const;
		float getSpeedUpProbability() const;
		float getSpeedDownProbability() const;
		float getContinuingDrivingProbability() const;
		
		float getStilParkProbability() const;
		float getResumingJourneyProbability() const;
		
		void setParkable(bool);
		void setRegisration(string);
		void setWeightVolume(unsigned int);
		void setWeightSpeed(unsigned int);
		
		void setTurnProbability(float);
		void setParkProbability(float);
		void setSpeedUpProbability(float);
		void setSpeedDownProbability(float);
		void setContinuingDrivingProbability(float);
		
		void setStilParkProbability(float);
		void setResumingJourneyProbability(float);
};
#endif
